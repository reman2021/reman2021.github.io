<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小笔记-积化和差、和差化积公式</title>
      <link href="/2021/10/01/%E5%B0%8F%E7%AC%94%E8%AE%B0-%E7%A7%AF%E5%8C%96%E5%92%8C%E5%B7%AE%E3%80%81%E5%92%8C%E5%B7%AE%E5%8C%96%E7%A7%AF%E5%85%AC%E5%BC%8F/"/>
      <url>/2021/10/01/%E5%B0%8F%E7%AC%94%E8%AE%B0-%E7%A7%AF%E5%8C%96%E5%92%8C%E5%B7%AE%E3%80%81%E5%92%8C%E5%B7%AE%E5%8C%96%E7%A7%AF%E5%85%AC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p><span id="more"></span></p><h2 id="和差化积">和差化积：</h2><p><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-10-01%2016-30-06-95.png" /></p><h2 id="积化和差">积化和差：</h2><p><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-10-01%2016-30-45-82.png" /></p><p>辅助记忆口诀：</p><p>正加正，正在前，余加余，余并肩</p><p>正减正，余在前，余减余，负正弦</p>]]></content>
      
      
      <categories>
          
          <category> 小笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 公式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Jetson Nano向PX4提供t265位置信息，实现室内定点飞行</title>
      <link href="/2021/09/07/%E4%BD%BF%E7%94%A8jetson%20nano%E5%90%91px4%E6%8F%90%E4%BE%9Bt265%E4%BD%8D%E7%BD%AE%E4%BF%A1%E6%81%AF%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%AE%A4%E5%86%85%E5%AE%9A%E7%82%B9%E9%A3%9E%E8%A1%8C/"/>
      <url>/2021/09/07/%E4%BD%BF%E7%94%A8jetson%20nano%E5%90%91px4%E6%8F%90%E4%BE%9Bt265%E4%BD%8D%E7%BD%AE%E4%BF%A1%E6%81%AF%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%AE%A4%E5%86%85%E5%AE%9A%E7%82%B9%E9%A3%9E%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<p>本文作者：南京航空航天大学 科技中心 陈思祺</p><p><span id="more"></span></p><p>使用的Jetson Nano镜像版本：4.6（2021-08-04发布）</p><p><ahref="https://developer.nvidia.com/zh-cn/embedded/downloads">NVIDIA官方镜像下载链接</a></p><p><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/img1.jpg" /></p><p>下载好镜像，烧录进TF卡，初次开机简单配置后进入系统，建议系统语言选择英语，正式开始本次教程</p><h4 id="更新软件列表更新软件">1.更新软件列表，更新软件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update </span><br><span class="line">sudo apt-get upgrade </span><br></pre></td></tr></table></figure><h4 id="安装-ros-melodic">2.安装 ROS Melodic</h4><p>参考<ahref="http://wiki.ros.org/melodic/Installation/Ubuntu">官网安装教程</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 设置sources.list</span></span><br><span class="line">sudo sh -c &#x27;echo &quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置密钥</span></span><br><span class="line">sudo apt install curl</span><br><span class="line">curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -</span><br><span class="line"><span class="meta">#</span><span class="bash"> 确保 Debian 包索引是最新的</span></span><br><span class="line">sudo apt update</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装桌面完整版（推荐）</span></span><br><span class="line">sudo apt install ros-melodic-desktop-full</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置环境</span></span><br><span class="line">echo &quot;source /opt/ros/melodic/setup.bash&quot; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 rosdep</span></span><br><span class="line">sudo apt install python-rosdep</span><br><span class="line"><span class="meta">#</span><span class="bash"> 初始化 rosdep</span></span><br><span class="line">sudo rosdep init</span><br><span class="line">rosdep update</span><br><span class="line"><span class="meta">#</span><span class="bash"> 试一下效果</span></span><br><span class="line">roscore</span><br></pre></td></tr></table></figure><h4 id="安装realsense">3.安装realsense</h4><p>参考<ahref="https://github.com/IntelRealSense/librealsense/blob/master/doc/installation.md">官网安装教程</a></p><p>安装过程中请拔下摄像头</p><h5 id="安装realsense-sdk">3.1 安装Realsense SDK</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载<span class="built_in">source</span></span> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 可使用Proxy代理加速下载。详见：https://ghproxy.com/</span></span><br><span class="line">git clone https://github.com/IntelRealSense/librealsense</span><br><span class="line">cd librealsense</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装依赖项</span> </span><br><span class="line">sudo apt-get install libudev-dev pkg-config libgtk-3-dev</span><br><span class="line">sudo apt-get install libusb-1.0-0-dev pkg-config</span><br><span class="line">sudo apt-get install libglfw3-dev</span><br><span class="line">sudo apt-get install libssl-dev</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装位于 librealsense 源目录中的 Intel Realsense 权限脚本</span></span><br><span class="line">sudo cp config/99-realsense-libusb.rules /etc/udev/rules.d/</span><br><span class="line">sudo udevadm control --reload-rules &amp;&amp; udevadm trigger </span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译</span></span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake ../ -DBUILD_EXAMPLES=true</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"><span class="meta">#</span><span class="bash"> 试一下效果</span></span><br><span class="line">realsense-viewer</span><br></pre></td></tr></table></figure><h5 id="安装realsense-ros">3.2 安装realsense-ros</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载<span class="built_in">source</span></span></span><br><span class="line">mkdir -p ~/catkin_ws/src</span><br><span class="line">cd ~/catkin_ws/src/</span><br><span class="line">git clone https://github.com/IntelRealSense/realsense-ros.git</span><br><span class="line">git clone https://github.com/pal-robotics/ddynamic_reconfigure</span><br><span class="line">cd realsense-ros/</span><br><span class="line">git checkout `git tag | sort -V | grep -P &quot;^\d+\.\d+\.\d+&quot; | tail -1`</span><br><span class="line"><span class="meta">#</span><span class="bash"> 更改cv_bridgeConfig.cmake中opencv4路径</span></span><br><span class="line">sudo gedit /opt/ros/melodic/share/cv_bridge/cmake/cv_bridgeConfig.cmake</span><br></pre></td></tr></table></figure><p>如图</p><p><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/img2.png" /></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编译</span></span><br><span class="line">cd ~/catkin_ws</span><br><span class="line">catkin_make</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置环境</span></span><br><span class="line">echo &quot;source ~/catkin_ws/devel/setup.bash&quot;&gt;&gt;~/.bashrc </span><br><span class="line">source ~/.bashrc</span><br><span class="line"><span class="meta">#</span><span class="bash">试一下效果</span></span><br><span class="line">roslaunch realsense2_camera rs_t265.launch</span><br></pre></td></tr></table></figure><h4 id="px4配置">4.PX4配置</h4><p>下载<em>QGroundControl</em></p><p><ahref="https://github.com/mavlink/qgroundcontrol/releases/">GitHub链接</a></p><p><a href="https://docs.qgroundcontrol.com/master/en/">使用说明</a></p><ul><li><p><code>MAV_1_CONFIG</code>= <code>TELEM 2</code></p></li><li><p><code>MAV_1_MODE</code> = <code>Onboard</code></p></li><li><p><code>SER_TEL2_BAUD</code> = <code>57600 8N1</code></p></li><li><p><code>EKF2_AID_MASK</code> 勾选<code>vision position fusion</code>和<code>vision yaw fusion</code></p></li><li><p><code>EKF2_HGT_MODE</code> 设置为 <code>Vision</code></p></li><li><p><code>MAV_ODOM_LP</code>设置为<code>1</code></p></li></ul><p>#### 5.MAVROS 和VIO</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> MAVROS</span></span><br><span class="line">sudo apt install python-catkin-tools</span><br><span class="line">sudo apt install ros-melodic-mavros ros-melodic-mavros-extras</span><br><span class="line">sudo apt-get install ros-indigo-mavros ros-indigo-mavros-extras ros‐indigo‐control‐toolbox</span><br><span class="line"><span class="meta">#</span><span class="bash"> VIO</span></span><br><span class="line">cd ~/catkin_ws/src</span><br><span class="line">git clone https://github.com/Auterion/VIO.git</span><br><span class="line">cd ..</span><br><span class="line">catkin_make</span><br></pre></td></tr></table></figure><p>更改以下配置</p><ol type="1"><li>T265相对位置及朝向</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gedit ~/catkin_ws/src/VIO/launch/bridge.launch</span><br></pre></td></tr></table></figure><p>修改</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;node pkg=&quot;tf&quot; type=&quot;static_transform_publisher&quot; name=&quot;tf_baseLink_cameraPose&quot;args=&quot;0 0 0 0 1.5708 0 base_link camera_pose_frame 1000&quot;/&gt;</span><br></pre></td></tr></table></figure><p><code>args</code>中</p><ul><li><p>开头三个参数为飞控中心指向T265中心的向量。例如T265在飞控前方10cm，上方4cm,则前三个参数为：<code>[0.1, 0, -0.04]</code></p></li><li><p>中间三个参数为旋转角(偏航, 俯仰,横滚)。默认T265朝地，则参数为<code>[0, 1.5708, 0]</code>；T265照射飞机机头方向，则参数为<code>[0 0 0]</code></p></li></ul><ol start="2" type="1"><li>如果TTL的速度异常</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /opt/ros/melodic/share/mavros/launch/px4_config.yaml</span><br></pre></td></tr></table></figure><p>第12行改为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timesync_rate: 0.0</span><br></pre></td></tr></table></figure><ol start="3" type="1"><li>如果使用USB连接</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /opt/ros/melodic/share/mavros/launch/px4.launch</span><br></pre></td></tr></table></figure><p>修改第5行为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;arg name=&quot;fcu_url&quot; default=&quot;/dev/ttyUSB0:57600&quot; /&gt;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gedit ~/catkin_ws/src/VIO/launch/bridge_mavros.launch</span><br></pre></td></tr></table></figure><p>修改第3行为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;arg name=&quot;fcu_url&quot; default=&quot;/dev/ttyUSB0:57600&quot; /&gt;</span><br></pre></td></tr></table></figure><ol start="4" type="1"><li>放开串口权限</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 用你自己的用户名替代下面的&lt;username&gt;</span></span><br><span class="line">sudo usermod -a -G dialout &lt;username&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改后需重启生效</span></span><br><span class="line">reboot now</span><br></pre></td></tr></table></figure><h4 id="起飞前检查">6.起飞前检查</h4><p>详情请看<ahref="https://docs.px4.io/master/en/computer_vision/visual_inertial_odometry.html#verify_estimate">官网说明</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 开启VIO</span></span><br><span class="line">roslaunch px4_realsense_bridge bridge_mavros.launch</span><br></pre></td></tr></table></figure><ul><li><p>连接好摄像头、USB、PX4，可暂不接电池，查看MAVLinkInspector</p></li><li><p>偏航机身，直到<code>ODOMETRY</code>消息的四元数非常接近单位四元数（w= 1，x = y = z = 0）</p></li><li><p>向前移动无人机，x 坐标应增大</p></li><li><p>向右移动无人机，y 坐标应增大</p></li><li><p>向上移动无人机，z 坐标应减小</p></li><li><p>遥控器切换到Position Flight Mode，若切换成功，应闪绿灯</p></li></ul><p>然后可以接上电池，尝试定点飞行</p><h4 id="参考文章">7.参考文章</h4><p><a href="https://docs.px4.io/master/en/">PX4 User Guide</a></p><p><a href="http://wiki.ros.org/">ROS Wiki</a></p><p><a href="https://github.com/IntelRealSense/">Intel RealSense</a></p><p><ahref="https://lifuguan.github.io/d435i/ros/2019/05/28/realsense-melodic-installation/">ROSmelodic kernel 4.18 安装 realsense D435i</a></p><p><ahref="https://zhuanlan.zhihu.com/p/364390798">通过MAVROS连接机载电脑（NANO/TX2/NX）与Pixhawk</a></p><p><a href="https://zhuanlan.zhihu.com/p/367357019">JetsonNano使用T265向PX4提供位置信息</a></p><p><a href="https://ghproxy.com/">GitHub Proxy</a></p>]]></content>
      
      
      <categories>
          
          <category> PX4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PX4飞控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构与算法</title>
      <link href="/2021/09/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
      <url>/2021/09/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="浅识数据结构与算法">浅识数据结构与算法</h2><p>数据结构是讨论在非数值计算领域，如何将现实世界的问题转换为计算机语言的描述。</p><h3 id="讨论范畴">讨论范畴</h3><p>Data Structures（数据结构）+ Algorithm（算法）= Programs（程序）</p><ul><li>程序：计算机可以执行的一组指令集</li><li>数据结构：问题的数学模型</li><li>算法：解决问题的策略</li></ul><p>计算机的算法与数据结构密切相关，算法无不依赖于数据结构，而数据结构也关系到算法的效率，直接决定了一个程序的好坏。</p><p><span id="more"></span></p><h3 id="数据与数据结构">数据与数据结构</h3><p>数据：指描述物理世界的数值、字符、图形图像、语音等所有能输入到计算机中并被计算机处理的符号集合。</p><p>数据结构：带结构的数据。即与特定问题相关的某一数据元素的集合和该集合中数据元素之间的关系。用来描述现实世界中的对象。</p><p>数据结构的逻辑表示：实现对物理世界的抽象和建模。分为线性结构、非线性结构（树形结构、图状结构、集合结构）。</p><p>数据结构的物理存储表示：在计算机中的具体实现方式。数据元素的物理存储表示为二进制，数据元素之间关系的物理存储表示包括顺序存储和链式存储。</p><h3 id="数据类型">数据类型</h3><h4 id="基本数据类型">基本数据类型</h4><p>例如C语言提供的基本数据类型有：</p><ul><li>整型：int</li><li>浮点型：float</li><li>双精度型：double</li><li>字符型：char</li><li>逻辑型：bool</li></ul><p>注：不同数据类型，其取值的范围不同，所能进行的操作也不同。因此数据类型是一个值的集合和定义在此集合上的一组操作的总称。</p><h4 id="抽象数据类型-abstract-data-type-adt">抽象数据类型（ AbstractData Type, ADT ）</h4><p>抽象数据类型：由用户定义，用以表示应用问题的<strong>数据模型</strong>以及定义在该模型上的<strong>一组操作</strong>，又称<strong>数据抽象</strong>。即一个抽象数据类型，其构成的两要素为<strong>数据的结构</strong>和<strong>相应的操作集合</strong>。</p><p>抽象数据类型可用（D，S，P）三元组表示，其中D 是数据对象； S 是 D上的关系集； P 是对 D 的基本操作集。<br>抽象数据类型最重要的是其<strong>抽象性质</strong>，把使用和实现分离，实行<strong>封装</strong>和<strong>信息隐藏</strong>。它的实现就是面向对象程序设计中的<strong>“类”</strong>。<br>例，抽象数据类型复数 z=x+iy 的定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> {</span></span><br><span class="line"><span class="keyword">float</span> realpart；</span><br><span class="line"><span class="keyword">float</span> imagpart；</span><br><span class="line">}<span class="built_in">complex</span>；</span><br></pre></td></tr></table></figure><p>再定义基本操作函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Assign</span><span class="params">( <span class="built_in">complex</span> &amp;Z, <span class="keyword">float</span> realval, <span class="keyword">float</span> imagval )</span><span class="comment">//构造实数z，其实部和虚部分别赋以参数realval和imagval</span></span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">GetReal</span><span class="params">( cpmplex Z )</span><span class="comment">//返回复数z的实部</span></span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">Getimag</span><span class="params">( cpmplex Z )</span><span class="comment">//返回复数z的虚部</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">( <span class="built_in">complex</span> z1, <span class="built_in">complex</span> z2, <span class="built_in">complex</span> &amp;sum )</span><span class="comment">//以sum返回两个复数z1和z2的和</span></span></span><br></pre></td></tr></table></figure><h3 id="算法与算法分析">算法与算法分析</h3><h4 id="算法特性">算法特性</h4><p>算法是为了解决某类问题而规定的一个有限长的操作序列。一个算法必须满足以下五个重要特性：</p><ul><li>有穷性：一个算法必须总是在执行<strong>有穷步之后结束</strong>，且每一步都可在<strong>有穷时间内完成</strong>。</li><li>确定性：算法中每条指令必须有<strong>确切的</strong>含义。<strong>在任何条件下，算法只有唯一的一条执行路径</strong>，也即对相同的输入只能得出相同的输出。</li><li>可行性：算法中描述的操作都是可以通过已经实现的基本运算执行有限次来实现的。</li><li>有输入：：一个算法有零个或多个的输入，这些输入取自于某个特定的对象的集合。实际问题中，有些输入是通过人机交互得到的。</li><li>有输出：一个算法有一个或多个输出，这些输出是同输入有着某些特定关系的量。</li></ul><h4 id="算法设计的原则">算法设计的原则</h4><p>正确性： 算法应当满足具体问题的明确需求。</p><ul><li>程序不含语法错误，能正常运行。</li><li>程序对于常规的输入数据能够得到满足规格说明要求的结果。</li><li>程序对精心选择的，苛刻的数据输入能够得到满足要求的结果，特别是边界条件约束下的正确反馈。</li><li>程序对于一切合法的输入数据都能得到满足规格说明要求的结果。</li></ul><p>可读性：算法主要是为了人的阅读与交流，其次才是为计算机执行，因此算法应该易于人的理解；另一方面，晦涩难读的程序容易隐藏较多错误而难以调试。</p><p>健壮性：当输入的数据非法时，算法应当恰当地作出反映或进行相应处理，而不是产生莫名奇妙的输出结果。并且，处理出错的方法不应是中断程序的执行，而应是返回一个表示错误或错误性质的值，以便在更高的抽象层次上进行处理。</p><p>高效率与低存储量需求：通常，效率指的是算法执行时间；存储量指的是算法执行过程中所需的最大存储空间，两者都与问题的规模有关。</p><h4 id="算法分析与度量">算法分析与度量</h4><p>衡量算法优劣的指标主要有两个：</p><ul><li>时间复杂度：根据算法写成的程序在执行时耗费时间的长度。</li><li>空间复杂度：根据算法写成的程序在执行时占用存储单位的大小。</li></ul><h5 id="时间复杂度">时间复杂度</h5><p>时间复杂度统计方法：</p><ul><li>事后统计法：存在两个问题<ul><li>必须执行程序</li><li>其它因素如编程所用语言、编译程序产生的机器代码的质量、程序运行的硬件环境等掩盖算法本质</li></ul></li><li>事前分析估算法<ul><li>一个特定算法的“运行工作量”的大小，只依赖于问题的规模，通常用整数量 n表示，或者说，它是问题规模的函数；</li><li>一般算法的执行时间与其包含的基本操作执行次数总和成正比；</li><li>算法中所包含的基本操作被执行的总次数可以作为算法运行时间的衡量标准。</li></ul></li></ul><p><br></p><p>时间复杂度的表示：大 O 记法</p><ul><li>算法中所包含的基本操作被执行的总次数是问题规模 n 的函数，可以记做f(n)。</li><li>随着问题规模 n 的增长，算法执行时间的增长率和 f(n)的增长率相同，则可记作: <strong>T(n) = O(f(n))</strong>,称** T(n)为算法的(渐近)时间复杂度**。</li><li>T(n) 是一个粗略的<strong>估计值</strong>，f(n)中的<strong>低次项</strong>以及<strong>常数项</strong>对算法执行时间的增长率<strong>贡献较小</strong>，因此可以忽略不计。</li></ul><p>注：函数 T(n)=O(f(n)) 说明在趋向无穷的极限意义下，函数 T的增长速度受到函数f的约束。</p><p><br></p><p>常见的时间复杂度:</p><ul><li>O(1) 或 O(c)：常量复杂度</li><li>O(logn)：对数复杂度</li><li>O(n)：线性复杂度</li><li>O(<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewBox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></span>)：平方复杂度</li><li>O(<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="2.279ex" height="1.528ex" role="img" focusable="false" viewBox="0 -675.5 1007.3 675.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container></span>)：指数复杂度</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/001%20%E7%BB%AA%E8%AE%BA.jpg" alt="时间复杂度随问题规模的变化趋势图"><figcaption aria-hidden="true">时间复杂度随问题规模的变化趋势图</figcaption></figure><p><br></p><p>时间复杂度:</p><ul><li>平均时间复杂度（θ）</li><li>最好情况下的时间复杂度（Ω）</li><li>最坏情况下的时间复杂度（O）</li></ul><p>注：我们对算法时间复杂度的估算一般是<strong>最坏情况下的时间复杂度（O）</strong>。</p><p><br></p><p>时间复杂度分析 例1，两个矩阵相乘：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mult</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> b[],<span class="keyword">int</span>&amp; c[])</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">// 以二维数组存储矩阵元素，c 为 a 和 b 的乘积</span></span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">1</span>;j&lt;=n;++j) </span><br><span class="line">{</span><br><span class="line">c[i,j] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (k=<span class="number">1</span>;k&lt;=n;++k)</span><br><span class="line">c[i,j] += a[i,k]*b[k,j];</span><br><span class="line">} <span class="comment">//for</span></span><br><span class="line">} <span class="comment">//mult</span></span><br></pre></td></tr></table></figure><p>在忽略贡献较小<strong>低次项</strong>以及<strong>常数项</strong>后，可得出：基本操作为乘法操作<code>a[i,k]*b[k,j]</code>，时间复杂度为 O(<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.91ex" role="img" focusable="false" viewBox="0 -833.2 1036.6 844.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container></span>)</p><p>例2，选择排序：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">select_sort</span><span class="params">(<span class="keyword">int</span>&amp; a[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">{</span><br><span class="line">p=i;</span><br><span class="line"><span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line"><span class="keyword">if</span>(a[j]&lt;a[p])</span><br><span class="line">p=j;</span><br><span class="line"><span class="keyword">if</span>(p!=i)</span><br><span class="line">a[i]&lt;---&gt;a[p];</span><br><span class="line">}</span><br><span class="line">} <span class="comment">// select_sort</span></span><br></pre></td></tr></table></figure><p>同样的，在忽略贡献较小<strong>低次项</strong>以及<strong>常数项</strong>后，可得出：基本操作为比较操作<code>if(a[j]&lt;a[p])</code>，时间复杂度为 O(<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewBox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></span>)</p><h5 id="空间复杂度">空间复杂度</h5><p>算法的存储量包括：</p><ul><li>输入数据所占空间</li><li>程序本身所占空间</li><li>辅助变量所占空间</li></ul><p>注：</p><ol type="1"><li>若输入数据所占空间只取决于问题本身，和算法无关，则只需要分析<strong>除输入和程序之外的辅助变量所占额外空间</strong>。</li><li>若所需额外空间相对于输入数据量来说是常数，则称此算法为<strong>原地工作</strong>。如上述的选择排序算法便是原地工作。</li><li>若所需存储量依赖于特定的输入，则通常<strong>按最坏情况考虑</strong>。</li></ol><p><br></p><p>空间复杂度：如果用 g(n)表示算法所需的除了输入数据以外的额外的存储量，算法的空间复杂度定义为<strong>S(n)=O(g(n))</strong>，表示随着问题规模的增长，算法运行所需存储量的增长率与 g(n)的增长率相同。</p><h2 id="线性表">线性表</h2><h3 id="线性表的顺序存储数组">线性表的顺序存储——数组</h3><p>顺序表：</p><ul><li>顺序表的定义：顺序表是用一组地址连续的存储空间依次存储线性表的数据元素</li><li>顺序表的特点：<ul><li>各个数据元素的逻辑顺序与其存放的物理顺序一致</li><li>对顺序表中所有元素，既可以进行顺序依次访问，也可以进行随机直接访问</li><li>顺序表用一维数组实现时，存储空间可以是静态分配的，也可以是动态分配的</li><li>顺序表所能存放的数据元素个数受数组的空间大小约束</li></ul></li><li>顺序表的三要素：<ul><li>起始地址（常量）</li><li>顺序表长度（常量）</li><li>顺序表包含的有效元素个数（变量）</li></ul></li></ul><h4 id="顺序表的操作">顺序表的操作</h4><p>访问类操作：</p><ul><li><p>获取顺序表第i个数据元素（时间复杂度为 O(1)）</p></li><li><p>查找元素e所在的位置（时间复杂度为 O(n)）</p></li></ul><p>加工类操作：</p><ul><li>在顺序表第i个位置插入元素e（时间复杂度为 O(n)）</li><li>将顺序表第i个位置上的元素删除（时间复杂度为 O(n)）</li></ul><p>注：由于顺序表的顺序存储的特点，插入和删除都要通过移动来实现，这样做的弊端有二：</p><ul><li>所需要移动的元素很多，浪费算力。</li><li>必须为数组开足够多的空间，否则有溢出风险。</li></ul><h3 id="线性表的链式存储链表">线性表的链式存储——链表</h3><h4 id="单链表">单链表</h4><p>单链表（single linkedlist）是一种最简单的链表表示，也叫做线性链表。单链表每个结点有两个域组成：数据域（data）存放数据元素；指针域（next）存放指向该链表中下一个结点的指针（后继结点的存储地址）。</p><p><img src="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/1560862292645286.png"><img src="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/1560862411132172.png" alt="单链表"></p><h5 id="特点">特点</h5><p>单链表的特点：</p><ul><li>单链表中数据元素的逻辑顺序与其物理存储顺序可能不一致，一般通过单链表的<strong>指针</strong>将各个数据元素按照线性表的逻辑顺序链接起来；</li><li>单链表的<strong>长度扩充较方便</strong>；</li><li>对单链表的访问操作只能<strong>从头结点的指针开始</strong>，逐个结点进行访问，不能像顺序表一样直接访问某个指定结点；</li><li>当进行插入和删除操作时，只需修改相关结点的指针域即可，<strong>不需要移动</strong>其他元素的存储位置；</li><li>由于单链表的每个结点带有指针域，因此存储空间消耗要比顺序表大。</li></ul><h5 id="存储结构">存储结构</h5><p>单链表的存储结构：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Typedef <span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">ElemType data; <span class="comment">// 数据域，ElemType为你想定义的任意数据类型，包括结构体struct等复合类型</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Lnode</span> *<span class="title">next</span>;</span> <span class="comment">// 指针域</span></span><br><span class="line">}Node, *LinkList;</span><br></pre></td></tr></table></figure><h5 id="基本操作">基本操作</h5><p>单链表的基本操作：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GetElem(L, i, e) <span class="comment">//取第i个数据元素</span></span><br><span class="line">ListInsert(&amp;L, i, e) <span class="comment">//插入数据元素</span></span><br><span class="line">ListDelete(&amp;L, i, e) <span class="comment">//删除数据元素</span></span><br><span class="line">DestroyList(&amp;L) <span class="comment">//销毁单链表</span></span><br><span class="line">CreateList(&amp;L, n) <span class="comment">//创建单链表</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法详解（基于MarkdownPad2）</title>
      <link href="/2021/08/19/Markdown%E8%AF%AD%E6%B3%95%E8%AF%A6%E8%A7%A3/"/>
      <url>/2021/08/19/Markdown%E8%AF%AD%E6%B3%95%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>Markdown是一种轻量级的标记语言，可用于在纯文本文档中添加格式化元素。Markdown 由John Gruber 于 2004 年创建，如今已成为世界上最受欢迎的标记语言之一。</p><span id="more"></span><h2 id="markdown简介">Markdown简介</h2><p>Markdown是一种轻量级标记语言，排版语法简洁，让人们更多地关注内容本身而非排版。它使用易读易写的纯文本格式编写文档，可与HTML 混编，可导出 HTML、PDF 以及本身的 .md 格式的文件。且 Markdown的语法十分简单，常用的标记符号不超过十个，用于日常写作记录绰绰有余，不到半小时就能完全掌握。但就是这十个不到的标记符号，却能让人优雅地沉浸式记录，专注内容而不是纠结排版，达到「心中无尘，码字入神」的境界。</p><h2 id="markdown基本语法速查表">Markdown基本语法速查表</h2><p>这些是 John Gruber 的原始设计文档中列出的元素。所有 Markdown应用程序都支持这些元素。</p><table><thead><tr class="header"><th style="text-align: center;">元素</th><th style="text-align: center;">Markdown语法</th><th style="text-align: center;">MarkdownPad2快捷键</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">标题（Heading）</td><td style="text-align: center;"><code># H</code></td><td style="text-align: center;"><code>Ctrl+1</code></td></tr><tr class="even"><td style="text-align: center;">粗体（Bold）</td><td style="text-align: center;"><code>**bold text**</code></td><td style="text-align: center;"><code>Ctrl+B</code></td></tr><tr class="odd"><td style="text-align: center;">斜体（Italic）</td><td style="text-align: center;"><code>*italicized text*</code></td><td style="text-align: center;"><code>Ctrl+I</code></td></tr><tr class="even"><td style="text-align: center;">引用块（Blockquote）</td><td style="text-align: center;"><code>&gt; blockquote</code></td><td style="text-align: center;"><code>Ctrl+Q</code></td></tr><tr class="odd"><td style="text-align: center;">有序列表（Ordered List）</td><td style="text-align: center;"><code>1. First item</code></td><td style="text-align: center;"><code>Ctrl+Shift+O</code></td></tr><tr class="even"><td style="text-align: center;">无序列表（Unordered List）</td><td style="text-align: center;"><code>- First item</code></td><td style="text-align: center;"><code>Ctrl+U</code></td></tr><tr class="odd"><td style="text-align: center;">代码（Code）</td><td style="text-align: center;"><code>`code`</code></td><td style="text-align: center;"><code>Ctrl+K</code></td></tr><tr class="even"><td style="text-align: center;">分隔线（Horizontal Rule）</td><td style="text-align: center;"><code>---</code></td><td style="text-align: center;"><code>Ctrl+R</code></td></tr><tr class="odd"><td style="text-align: center;">链接（Link）</td><tdstyle="text-align: center;"><code>[title](https://www.example.com)</code></td><td style="text-align: center;"><code>Ctrl+L</code></td></tr><tr class="even"><td style="text-align: center;">图片（Image）</td><td style="text-align: center;"><code>![alt text](image.jpg)</code></td><td style="text-align: center;"><code>Ctrl+G</code></td></tr></tbody></table><h2 id="基本语法">基本语法</h2><h3 id="标题heading">标题（Heading）</h3><p>创建标题：在单词或短语前面添加井号 (#) 。#的数量代表了标题的级别。例如，添加三个 # 表示创建一个三级标题(<code>&lt;h3&gt;</code>)： <code>### My Header</code><strong>注意用一个空格在 # 和标题之间进行分隔。</strong></p><p>标题的Markdown语法与HTML的对应关系如下：</p><table><thead><tr class="header"><th style="text-align: center;">Markdown语法</th><th style="text-align: center;">HTML</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code># Heading level 1</code></td><tdstyle="text-align: center;"><code>&lt;h1&gt;Heading level 1&lt;/h1&gt;</code></td></tr><tr class="even"><td style="text-align: center;"><code>## Heading level 2</code></td><tdstyle="text-align: center;"><code>&lt;h2&gt;Heading level 2&lt;/h2&gt;</code></td></tr><tr class="odd"><td style="text-align: center;"><code>### Heading level 3</code></td><tdstyle="text-align: center;"><code>&lt;h3&gt;Heading level 3&lt;/h3&gt;</code></td></tr></tbody></table><p>注：最多只能添加六个 # ，即只能到六级标题，无七级标题。</p><p>也可以在文本下方添加任意数量的 == 号来标识一级标题，或者 --号来标识二级标题。 一级标题： <code>Heading level 1</code><code>===============</code> 二级标题： <code>Heading level 2</code><code>---------------</code></p><h3 id="段落paragraph">段落（Paragraph）</h3><p>创建段落：使用空白行将一行或多行文本进行分隔。<strong>注意不要用空格（spaces）或制表符（tabs）缩进段落。</strong> 实现效果如下：</p><p>I really like using Markdown.</p><p>I think I'll use it to format all of my documents from now on</p><h3 id="换行line-break">换行（Line Break）</h3><p>在一行的末尾添加两个或多个空格，然后按回车键,即可换行(<code>&lt;br&gt;</code>)。<br />几乎每个 Markdown应用程序都支持两个或多个空格进行换行，称为<em>结尾空格（trailingwhitespace)</em>，但因为很难在编辑器中直接看到空格所以颇有争议，且很多人都会有意或无意地在每个句子后面添加两个空格。因此，我们可以使用另一种换行方式：HTML的<code>&lt;br&gt;</code>标签。** MarkdownPads2支持预览，且直接回车效果一样，所以不用特别在意**。其实还有还有两种其他方式，但是为了确保兼容性，建议就使用行尾添加“结尾空格”或HTML 的<code>&lt;br&gt;</code>标签的方式来实现换行。</p><h3id="强调语法粗体bold斜体italic">强调语法：粗体（Bold）、斜体（Italic）</h3><h4 id="粗体bold">粗体（Bold）</h4><p>加粗文本：在单词或短语的前后各添加两个星号（asterisks）或下划线（underscores）。加粗一个单词或短语的中间部分：在要加粗部分的两侧各添加两个星号（asterisks）。</p><p>如下表：</p><table><colgroup><col style="width: 54%" /><col style="width: 22%" /><col style="width: 22%" /></colgroup><thead><tr class="header"><th style="text-align: center;">Markdown语法</th><th style="text-align: center;">HTML</th><th style="text-align: center;">效果</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>I love **bold text**.</code></td><tdstyle="text-align: center;"><code>I love &lt;strong&gt;bold text&lt;/strong&gt;.</code></td><td style="text-align: center;">I love <strong>bold text</strong>.</td></tr><tr class="even"><td style="text-align: center;"><code>I love __bold text__ .</code></td><tdstyle="text-align: center;"><code>I love &lt;strong&gt;bold text&lt;/strong&gt;.</code></td><td style="text-align: center;">I love <strong>bold text</strong>.</td></tr><tr class="odd"><td style="text-align: center;"><code>tobe**or**nottobe</code></td><tdstyle="text-align: center;"><code>tobe&lt;strong&gt;or&lt;/strong&gt;nottobe</code></td><td style="text-align: center;">tobe<strong>or</strong>nottobe</td></tr></tbody></table><h4 id="斜体italic">斜体（Italic）</h4><p>斜体显示文本：在单词或短语前后添加一个星号（asterisk）或下划线（underscore）。斜体突出单词的中间部分：在字母前后各添加一个星号，中间不要带空格。</p><p>如下表：</p><table><colgroup><col style="width: 54%" /><col style="width: 22%" /><col style="width: 22%" /></colgroup><thead><tr class="header"><th style="text-align: center;">Markdown语法</th><th style="text-align: center;">HTML</th><th style="text-align: center;">效果</th></tr></thead><tbody><tr class="odd"><tdstyle="text-align: center;"><code>Italicized text is the *cat's meow*.</code></td><tdstyle="text-align: center;"><code>Italicized text is the &lt;em&gt;cat's meow&lt;/em&gt;.</code></td><td style="text-align: center;">Italicized text is the <em>cat'smeow</em>.</td></tr><tr class="even"><tdstyle="text-align: center;"><code>Italicized text is the _cat's meow_.</code></td><tdstyle="text-align: center;"><code>Italicized text is the &lt;em&gt;cat's meow&lt;/em&gt;.</code></td><td style="text-align: center;">Italicized text is the <em>cat'smeow</em>.</td></tr><tr class="odd"><td style="text-align: center;"><code>*tobe*or*nottobe*</code></td><tdstyle="text-align: center;"><code>&lt;em&gt;tobe&lt;/em&gt;or&lt;em&gt;nottobe&lt;/em&gt;</code></td><td style="text-align: center;"><em>tobe</em>or<em>nottobe</em></td></tr></tbody></table><h4 id="粗体bold-斜体italic">粗体（Bold）&amp; 斜体（Italic）</h4><p>要让文本又粗又斜，只需在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，则在要突出显示的部分前后各添加三个星号，中间不要带空格。</p><p>如下表：</p><table><colgroup><col style="width: 54%" /><col style="width: 22%" /><col style="width: 22%" /></colgroup><thead><tr class="header"><th style="text-align: center;">Markdown语法</th><th style="text-align: center;">HTML</th><th style="text-align: center;">效果</th></tr></thead><tbody><tr class="odd"><tdstyle="text-align: center;"><code>This text is ***really important***.</code></td><tdstyle="text-align: center;"><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td style="text-align: center;">This text is <strong><em>reallyimportant</em></strong>.</td></tr><tr class="even"><tdstyle="text-align: center;"><code>This text is ___really important___.</code></td><tdstyle="text-align: center;"><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td style="text-align: center;">This text is <strong><em>reallyimportant</em></strong>.</td></tr><tr class="odd"><tdstyle="text-align: center;"><code>This text is __*really important*__.</code></td><tdstyle="text-align: center;"><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td style="text-align: center;">This text is <strong><em>reallyimportant</em></strong>.</td></tr><tr class="even"><tdstyle="text-align: center;"><code>This text is **_really important_**.</code></td><tdstyle="text-align: center;"><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td style="text-align: center;">This text is <strong><em>reallyimportant</em></strong>.</td></tr><tr class="odd"><tdstyle="text-align: center;"><code>This text is very***very***important.</code></td><tdstyle="text-align: center;"><code>This text is very&lt;strong&gt;&lt;em&gt;very&lt;/em&gt;&lt;/strong&gt;important.</code></td><td style="text-align: center;">This text isvery<strong><em>very</em></strong>important.</td></tr></tbody></table><h3 id="引用块blockquote">引用块（Blockquote）</h3><h4 id="单段落">单段落</h4><p>创建引用块：在段落前添加一个 &gt; 符号。 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; To be or not to be</span><br><span class="line"></span><br></pre></td></tr></table></figure>渲染效果如下：</p><blockquote><p>To be or not to be</p></blockquote><h4 id="多段落">多段落</h4><p>创建多个段落的块引用：除了在段落前添加一个 &gt;符号，还要在段落之间的空白行添加一个 &gt; 符号 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; &quot;Il n&#x27;ya qu&#x27;un héroïsme au monde : c&#x27;est de voir le monde tel qu&#x27;il est et de l&#x27;aimer.&quot;</span><br><span class="line">&gt; </span><br><span class="line">&gt;  Romain Rolland</span><br></pre></td></tr></table></figure></p><p>渲染效果如下：</p><blockquote><p>"Il n'ya qu'un héroïsme au monde : c'est de voir le monde tel qu'ilest et de l'aimer."</p><p>Romain Rolland</p></blockquote><h4 id="嵌套">嵌套</h4><p>引用还可以嵌套：在要嵌套的段落前添加一个 &gt;&gt; 符号即可。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; Romain Rolland</span><br><span class="line">&gt;&gt;  &quot;Il n&#x27;ya qu&#x27;un héroïsme au monde : c&#x27;est de voir le monde tel qu&#x27;il est et de l&#x27;aimer.&quot; </span><br></pre></td></tr></table></figure></p><p>渲染效果如下：</p><blockquote><p>Romain Rolland &gt; "Il n'ya qu'un héroïsme au monde : c'est de voirle monde tel qu'il est et de l'aimer."</p></blockquote><h4 id="带有其它元素的块引用">带有其它元素的块引用</h4><p>块引用可以包含其他 Markdown格式的元素。并非所有元素都能生效，可以自行实验哪些元素有效。 例如：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; #### The quarterly results look great!</span><br><span class="line">&gt;</span><br><span class="line">&gt; - Revenue was off the chart.</span><br><span class="line">&gt; - Profits were higher than ever.</span><br><span class="line">&gt;</span><br><span class="line">&gt;  *Everything* is going according to **plan**.</span><br></pre></td></tr></table></figure></p><p>效果如下： &gt; #### The quarterly results look great! &gt; &gt; -Revenue was off the chart. &gt; - Profits were higher than ever. &gt;&gt; <em>Everything</em> is going according to<strong>plan</strong>.</p><p><strong>注：引用块最好与上下文各隔一个空行</strong></p><h3 id="列表list">列表（List）</h3><p>列表包括有序列表和无序列表。</p><h4 id="有序列表">有序列表</h4><p>创建有序列表：在每个列表项前添加数字并紧跟一个英文句点和<strong>空格</strong>。数字无须按数学顺序排列，但是应当以数字1 起始。 例如下面三个有序列表是等价的： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. First item</span><br><span class="line">2. Second item</span><br><span class="line">3. Third item</span><br><span class="line">4. Fourth item</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. First item</span><br><span class="line">8. Second item</span><br><span class="line">3. Third item</span><br><span class="line">5. Fourth item</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. First item</span><br><span class="line">1. Second item</span><br><span class="line">1. Third item</span><br><span class="line">1. Fourth item</span><br></pre></td></tr></table></figure></p><p>效果如下： 1. First item 1. Second item 1. Third item 1. Fourthitem</p><p>有序列表可进行嵌套： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. First item</span><br><span class="line">2. Second item</span><br><span class="line">3. Third item</span><br><span class="line">    1. Indented item</span><br><span class="line">    2. Indented item</span><br><span class="line">4. Fourth item</span><br></pre></td></tr></table></figure></p><p>效果如下： 1. First item 2. Second item 3. Third item 1. Indenteditem 2. Indented item 4. Fourth item</p><h4 id="无序列表">无序列表</h4><p>要创建无序列表，请在每个列表项前面添加破折号 (-)、星号 (*) 或加号 (+)，同时不要忘记加上空格。 如下三个无序列表也是等价的： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- First item</span><br><span class="line">- Second item</span><br><span class="line">- Third item</span><br><span class="line">- Fourth item</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* First item</span><br><span class="line">* Second item</span><br><span class="line">* Third item</span><br><span class="line">* Fourth item</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">+ First item</span><br><span class="line">+ Second item</span><br><span class="line">+ Third item</span><br><span class="line">+ Fourth item</span><br></pre></td></tr></table></figure></p><p>效果如下： + First item + Second item + Third item + Fourth item</p><p>无序列表同样可进行嵌套： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- First item</span><br><span class="line">- Second item</span><br><span class="line">- Third item</span><br><span class="line">    - Indented item</span><br><span class="line">    - Indented item</span><br><span class="line">- Fourth item</span><br></pre></td></tr></table></figure></p><p>效果： - First item - Second item - Third item - Indented item -Indented item - Fourth item</p><h4 id="在列表中嵌套其他元素">在列表中嵌套其他元素</h4><p>要在保留列表连续性的同时添加其他元素，要将该元素缩进四个空格或一个制表符（Tab），如下所示：</p><h5 id="段落">段落</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*   This is the first list item.</span><br><span class="line">*   Here&#x27;s the second list item.</span><br><span class="line"></span><br><span class="line">    I need to add another paragraph below the second list item.</span><br><span class="line"></span><br><span class="line">*   And here&#x27;s the third list item.</span><br></pre></td></tr></table></figure><p>渲染效果如下： * This is the first list item. * Here's the secondlist item.</p><pre><code>I need to add another paragraph below the second list item.</code></pre><ul><li>And here's the third list item.</li></ul><h5 id="引用块">引用块</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*   This is the first list item.</span><br><span class="line">*   Here&#x27;s the second list item.</span><br><span class="line"></span><br><span class="line">    &gt; A blockquote would look great below the second list item.</span><br><span class="line"></span><br><span class="line">*   And here&#x27;s the third list item.</span><br></pre></td></tr></table></figure><p>渲染效果如下： * This is the first list item. * Here's the secondlist item.</p><pre><code>&gt; A blockquote would look great below the second list item.</code></pre><ul><li>And here's the third list item.</li></ul><h5 id="代码块">代码块</h5><p>代码块通常采用四个空格或一个制表符缩进。当把它们被放入列表中，则要将它们缩进八个空格或两个制表符。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.  Open the file.</span><br><span class="line">2.  Find the following code block on line 21:</span><br><span class="line"></span><br><span class="line">        &lt;html&gt;</span><br><span class="line">          &lt;head&gt;</span><br><span class="line">            &lt;title&gt;Test&lt;/title&gt;</span><br><span class="line">          &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">3.  Update the title to match the name of your website.</span><br></pre></td></tr></table></figure></p><p>渲染效果如下： 1. Open the file. 2. Find the following code block online 21:</p><pre><code>    &lt;html&gt;      &lt;head&gt;        &lt;title&gt;Test&lt;/title&gt;      &lt;/head&gt;</code></pre><ol start="3" type="1"><li>Update the title to match the name of your website.</li></ol><h5 id="图片">图片</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.  Open the file containing the Linux mascot.</span><br><span class="line">2.  Marvel at its beauty.</span><br><span class="line"></span><br><span class="line">    ![](https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/linux.png)</span><br><span class="line"></span><br><span class="line">3.  Close the file.</span><br></pre></td></tr></table></figure><p>渲染效果如下： 1. Open the file containing the Linux mascot. 2.Marvel at its beauty.</p><pre><code>![](https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/linux.png)</code></pre><ol start="3" type="1"><li>Close the file.</li></ol><h5 id="列表">列表</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. First item</span><br><span class="line">2. Second item</span><br><span class="line">3. Third item</span><br><span class="line">    - Indented item</span><br><span class="line">    - Indented item</span><br><span class="line">4. Fourth item</span><br></pre></td></tr></table></figure><p>渲染效果如下： 1. First item 2. Second item 3. Third item - Indenteditem - Indented item 4. Fourth item</p><h3 id="代码">代码</h3><p>将代码放在在反引号 (<code>`</code>)中，如果代码包含一个或多个反引号，则将其包裹在双反引号中：</p><table><colgroup><col style="width: 54%" /><col style="width: 22%" /><col style="width: 22%" /></colgroup><thead><tr class="header"><th style="text-align: center;">Markdown语法</th><th style="text-align: center;">HTML</th><th style="text-align: center;">效果</th></tr></thead><tbody><tr class="odd"><tdstyle="text-align: center;"><code>At the command prompt, type `nano`.</code></td><tdstyle="text-align: center;"><code>At the command prompt, type &lt;code&gt;nano&lt;/code&gt;.</code></td><td style="text-align: center;">At the command prompt, type<code>nano</code>.</td></tr><tr class="even"><tdstyle="text-align: center;"><code>``Use `code` in your Markdown file.``</code></td><tdstyle="text-align: center;"><code>&lt;code&gt;Use `code` in your Markdown file.&lt;/code&gt;</code></td><tdstyle="text-align: center;"><code>Use `code` in your Markdown file.</code></td></tr></tbody></table><p><strong>代码块</strong>创建代码块：将代码块的每一行缩进至少四个空格或一个制表符，效果如下：</p><pre><code>&lt;html&gt;  &lt;head&gt;  &lt;/head&gt;&lt;/html&gt;</code></pre><p>个人觉得不如围栏代码块好看，且不用缩进，在拓展语法中会讲到。</p><h3 id="分隔线horizontal-rule">分隔线（Horizontal Rule）</h3><p>创建分隔线：在单独一行上使用三个及三个以上星号 (***)、破折号 (---)或下划线 (___) 且不包含其他内容： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">_________________</span><br></pre></td></tr></table></figure></p><p>渲染效果：</p><hr /><p><strong>注意在分隔线的前后均添加空白行</strong></p><h3 id="链接link">链接（Link）</h3><h4 id="超链接">超链接</h4><p>超链接Markdown语法：<code>[超链接显示名](超链接地址 "超链接title")</code>对应的HTML代码：<code>&lt;a href="超链接地址" title="超链接title"&gt;超链接显示名&lt;/a&gt;</code>链接title是当鼠标悬停在链接上时会出现的文字，可以自行修改，它放在圆括号中链接地址的后面，跟链接地址之间以空格分隔。例如： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我的博客链接：[ZCW_Blog](http://zcw-blog.top &quot;不来看看吗&quot;)</span><br></pre></td></tr></table></figure></p><p>渲染效果如下： 我的博客链接：<a href="http://zcw-blog.top"title="不来看看吗">ZCW_Blog</a></p><h4 id="超链接居中">超链接居中</h4>Markdown 本身并没有居中语法，不过我们可以利用 HTML语法来实现超链接居中，只需将超链接放在<code>&lt;center&gt;&lt;/center&gt;</code>之间，需要注意的是在MarkdownPad2中要将链接与<code>&lt;center&gt;&lt;/center&gt;</code>各隔一个空行，否则链接会失效。例如： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;center&gt;</span><br><span class="line"></span><br><span class="line">[ZCW_Blog](http://zcw-blog.top &quot;不来看看吗&quot;)</span><br><span class="line"></span><br><span class="line">&lt;/center&gt;</span><br></pre></td></tr></table></figure> 效果如下：<center><p><a href="http://zcw-blog.top" title="不来看看吗">ZCW_Blog</a></p></center><h4 id="网址和-email-地址">网址和 Email 地址</h4><p>使用尖括号可以把 URL 或者 email 地址变成可点击的链接：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;http://zcw-blog.top&gt;</span><br><span class="line">&lt;a@example.com&gt;</span><br></pre></td></tr></table></figure></p><h4 id="带格式化的链接">带格式化的链接</h4><p>强调链接：在链接语法前后增加星号（*）。将链接表示为代码：在方括号中添加反引号（`）。 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我的博客链接： **[ZCW_Blog](http://zcw-blog.top &quot;不来看看吗&quot;)**</span><br><span class="line">我的博客链接： *[ZCW_Blog](http://zcw-blog.top &quot;不来看看吗&quot;)*</span><br><span class="line">我的博客链接：[`ZCW_Blog`](http://zcw-blog.top &quot;不来看看吗&quot;)</span><br></pre></td></tr></table></figure></p><p>渲染效果如下： 我的博客链接： <strong><a href="http://zcw-blog.top"title="不来看看吗">ZCW_Blog</a></strong> 我的博客链接： <em><ahref="http://zcw-blog.top" title="不来看看吗">ZCW_Blog</a></em>我的博客链接：<a href="http://zcw-blog.top"title="不来看看吗"><code>ZCW_Blog</code></a></p><h3 id="引用链接">引用链接</h3><p>引用样式链接是一种特殊的链接,作用是使 URL 在 Markdown中更易于显示和阅读，它分为两个部分：</p><p><strong>第一部分</strong></p><p>使用两组括号进行格式设置。第一组方括号内显示为链接的文本。第二组括号包含一个标签，该标签用于指向存储在文档其他位置的链接。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[ZCW_Blog1][1]</span><br><span class="line">[ZCW_Blog2][2]</span><br><span class="line">[ZCW_Blog3][3]</span><br></pre></td></tr></table></figure></p><p><strong>第二部分</strong></p><p>第二部分使用以下属性设置格式： 1.放在括号中的标签，其后紧跟一个冒号和至少一个空格（例如[label]:）。 2.链接的 URL ，可以选择将其括在尖括号中。 3.链接的可选标题，可以将其括在双引号，单引号或括号中。</p><p>如下： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[1]: http://zcw-blog.top &quot;不来看看吗&quot;</span><br><span class="line">[2]: &lt;http://zcw-blog.top&gt; &#x27;来看看吧&#x27;</span><br><span class="line">[3]: http://zcw-blog.top （快来看！）</span><br></pre></td></tr></table></figure></p><p>然后将以上标签放在文章的任意位置，如文末，这样在 Markdown编辑文章的时候链接的显示就会变得更加简洁。 渲染效果如下： <ahref="http://zcw-blog.top" title="不来看看吗">ZCW_Blog1</a> <ahref="http://zcw-blog.top" title="来看看吧">ZCW_Blog2</a> <ahref="http://zcw-blog.top" title="快来看！">ZCW_Blog3</a></p><h3 id="图片image">图片（Image）</h3><p>插入图片 Markdown语法：<code>![图片alt](图片链接或路径 "图片title")</code>对应的HTML代码：<code>&lt;img src="图片链接或路径" alt="图片alt" title="图片title"&gt;</code>插入图片建议使用图床生成图片链接，再直接复制粘贴即可。 我使用的是 Github+ jsDelivr + PicGo 搭建的免费图床，详情可见</p><h3 id="转义字符语法">转义字符语法</h3><p>如果要显示原本用于格式化 Markdown文档的字符，请在字符前面添加反斜杠字符 () 。以下列出的字符都可以通过使用反斜杠字符进行转义：</p><table><thead><tr class="header"><th style="text-align: center;">Character</th><th style="text-align: center;">Name</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">\</td><td style="text-align: center;">backslash</td></tr><tr class="even"><td style="text-align: center;">`</td><td style="text-align: center;">backtick</td></tr><tr class="odd"><td style="text-align: center;">*</td><td style="text-align: center;">asterisk</td></tr><tr class="even"><td style="text-align: center;">_</td><td style="text-align: center;">underscore</td></tr><tr class="odd"><td style="text-align: center;">{}</td><td style="text-align: center;">curly braces</td></tr><tr class="even"><td style="text-align: center;">[]</td><td style="text-align: center;">brackets</td></tr><tr class="odd"><td style="text-align: center;">()</td><td style="text-align: center;">parentheses</td></tr><tr class="even"><td style="text-align: center;">#</td><td style="text-align: center;">pound sign</td></tr><tr class="odd"><td style="text-align: center;">+</td><td style="text-align: center;">plus sign</td></tr><tr class="even"><td style="text-align: center;">-</td><td style="text-align: center;">minus sign (hyphen)</td></tr><tr class="odd"><td style="text-align: center;">.</td><td style="text-align: center;">dot</td></tr><tr class="even"><td style="text-align: center;">!</td><td style="text-align: center;">exclamation mark</td></tr><tr class="odd"><td style="text-align: center;"></td><td style="text-align: center;"></td></tr></tbody></table><p>文章编辑常用的基本语法差不多就以上这些，掌握之后就可以开始创作啦。如果想了解拓展语法可以接着往下看：</p><h2 id="拓展语法">拓展语法</h2><p>注意免费版 MarkdownPads2 是不支持拓展语法的，需要升级为Markdown（Extra），详见<ahref="http://zcw-blog.top/2021/08/17/%E5%9C%A8hexo%E5%8D%9A%E5%AE%A2%E4%B8%8A%E8%BF%9B%E8%A1%8C%E5%88%9B%E4%BD%9C/#more"title="就在-安装Markdown编辑器-部分哦">在Hexo博客上进行创作</a>。拓展语法没有相应快捷键哦。</p><h3 id="表格">表格</h3><p>添加表格：使用三个或多个连字符（---）创建每列的标题，并使用管道（|）分隔每列。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| Syntax      | Description |</span><br><span class="line">| ----------- | ----------- |</span><br><span class="line">| Header      | Title       |</span><br><span class="line">| Paragraph   | Text        |</span><br></pre></td></tr></table></figure></p><p>呈现的输出如下所示：</p><table><thead><tr class="header"><th>Syntax</th><th>Description</th></tr></thead><tbody><tr class="odd"><td>Header</td><td>Title</td></tr><tr class="even"><td>Paragraph</td><td>Text</td></tr></tbody></table><p>单元格宽度可以变化，但是呈现的输出不变： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| Syntax | Description |</span><br><span class="line">| --- | ----------- |</span><br><span class="line">| Header | Title |</span><br><span class="line">| Paragraph | Text |</span><br></pre></td></tr></table></figure></p><table><thead><tr class="header"><th>Syntax</th><th>Description</th></tr></thead><tbody><tr class="odd"><td>Header</td><td>Title</td></tr><tr class="even"><td>Paragraph</td><td>Text</td></tr></tbody></table><p><em>Tip: 使用连字符和管道创建表可能很麻烦。可以尝试使用<ahref="https://www.tablesgenerator.com/markdown_tables">Markdown TablesGenerator</a>，通过图形界面构建表格，然后将生成的 Markdown格式的文本复制到文件中。</em></p><h4 id="对齐">对齐</h4><p>可以通过在标题行中的连字符的左侧，右侧或两侧添加冒号（:），将列中的文本对齐到左侧，右侧或中心。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| Syntax      | Description | Test Text     |</span><br><span class="line">| :---        |    :----:   |          ---: |</span><br><span class="line">| Header      | Title       | Here&#x27;s this   |</span><br><span class="line">| Paragraph   | Text        | And more      |</span><br></pre></td></tr></table></figure></p><p>呈现的输出如下所示：</p><table><thead><tr class="header"><th style="text-align: left;">Syntax</th><th style="text-align: center;">Description</th><th style="text-align: right;">Test Text</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">Header</td><td style="text-align: center;">Title</td><td style="text-align: right;">Here's this</td></tr><tr class="even"><td style="text-align: left;">Paragraph</td><td style="text-align: center;">Text</td><td style="text-align: right;">And more</td></tr></tbody></table><h4 id="表格中可使用的文本格式">表格中可使用的文本格式</h4><p>可以添加链接，代码（仅反引号（`）中的单词或短语，而不是代码块）和强调，但不能添加标题，块引用，列表，水平规则，图像或HTML 标签。</p><h4 id="合并单元格">合并单元格</h4><p>Markdown 并没有合并单元格的相关语法，但是 Markdown 是兼容 HTML的，因此可以通过 HTML 的方式实现单元格合并。相关内容可以参考<ahref="https://blog.csdn.net/qq_32042527/article/details/88084130">Markdown表格合并单元格</a>，于此不再赘述。</p><h3 id="围栏代码块">围栏代码块</h3><p>创建围栏代码块：在代码块之前和之后的行上使用三个反引号（```）或三个波浪号（~~~）。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;: &quot;John&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Smith&quot;,</span><br><span class="line">  &quot;age&quot;: 25</span><br><span class="line">&#125;</span><br><span class="line">``` </span><br></pre></td></tr></table></figure></p><p>呈现的输出如下所示： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;: &quot;John&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Smith&quot;,</span><br><span class="line">  &quot;age&quot;: 25</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>要在代码块中显示反引号，只需要用更多的反引号包裹就好了，跟套娃一样，例如：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">```` </span><br><span class="line">```</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;: &quot;John&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Smith&quot;,</span><br><span class="line">  &quot;age&quot;: 25</span><br><span class="line">&#125;</span><br><span class="line">``` </span><br><span class="line">````</span><br></pre></td></tr></table></figure> 呈现的输出就是这样： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;: &quot;John&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Smith&quot;,</span><br><span class="line">  &quot;age&quot;: 25</span><br><span class="line">&#125;</span><br><span class="line">``` </span><br></pre></td></tr></table></figure></p><h4 id="语法高亮">语法高亮</h4><p>使用此功能可以为编写代码的任何语言添加颜色突出显示，只要在受防护的代码块之前的反引号旁边指定一种语言即可。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">``` json</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;: &quot;John&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Smith&quot;,</span><br><span class="line">  &quot;age&quot;: 25</span><br><span class="line">&#125;</span><br><span class="line">```</span><br></pre></td></tr></table></figure> 呈现的输出如下所示： <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;firstName&quot;</span>: <span class="string">&quot;John&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;lastName&quot;</span>: <span class="string">&quot;Smith&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;age&quot;</span>: <span class="number">25</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="删除线">删除线</h3><p>删除线功能可以指示某些错误。在要删除的词语前后使用两个波浪号（~）即可，如下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~地球是方的。~~地球是圆的。</span><br></pre></td></tr></table></figure> <del>地球是方的。</del>地球是圆的。</p><h3 id="任务列表">任务列表</h3><p>创建任务列表：在任务列表项之前添加破折号（-）和方括号，注意 - 和 [ ]之间要加上空格，如下： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- [x] Write the press release</span><br><span class="line">- [ ] Update the website</span><br><span class="line">- [ ] Contact the media</span><br></pre></td></tr></table></figure></p><ul class="task-list"><li><input type="checkbox" disabled="" checked="" />Write the press release</li><li><input type="checkbox" disabled="" />Update the website</li><li><input type="checkbox" disabled="" />Contact the media</li></ul><h3 id="使用-emoji-表情">使用 Emoji 表情</h3><p>有两种方法将表情符号添加到Markdown文件中：将表情符号复制并粘贴到Markdown 格式的文本中，或者键入 emojishortcodes（表情简码）。我在MarkdownPad2上使用表情简码没有成功，应该是不支持，所以只能使用复制粘贴的方法。</p><h4 id="复制和粘贴表情符号">复制和粘贴表情符号</h4><p>大多数情况下可以简单地从<ahref="https://emojipedia.org/">Emojipedia</a>等来源复制表情符号并粘贴到文档中。 Markdown 编辑器会自动以 Markdown格式的文本显示表情符号💡。</p><h3 id="自动网址链接">自动网址链接</h3><p>MarkdownPad2 会自动将 URL 转换为链接。也就是说如果输入http://www.example.com ，即使未使用方括号，MarkdownPad2也会自动将其转换为链接。</p><p>如果不希望 MarkdownPad2 自动链接 URL ，则可以通过将 URL表示为带反引号的代码来删除该链接。</p><h2 id="常用技巧">常用技巧</h2><p>这里主要是利用 Markdown 支持基本的 HTML语法的特性，满足一些编辑排版的需要。</p><h3 id="居中左对齐右对齐">居中、左对齐、右对齐</h3>在超链接居中部分已经提及，Markdown 本身并没有居中语法，但我们可以使用HTML 语法来实现居中、左对齐和右对齐。 示例如下： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;center&gt;居中&lt;/center&gt;</span><br><span class="line">&lt;p align=&quot;left&quot;&gt;左对齐&lt;/p&gt;</span><br><span class="line">&lt;p align=&quot;right&quot;&gt;右对齐&lt;/p&gt;</span><br></pre></td></tr></table></figure>实现效果：<center>居中</center><p align="left">左对齐</p><p align="right">右对齐</p><h2 id="高级技巧">高级技巧</h2><h3 id="显示数学公式">显示数学公式</h3><hr /><p>自此，有关 Markdown语法的学习就暂时告一段落啦，现在就将所学用于实践，去编辑你的第一个Markdown 文件吧。你也可以在<ahref="https://markdown.com.cn/editor/">Markdown在线编辑器</a>上小试牛刀。</p><p>如果要让你的 Markdown文件更加易读，改善你的排版，让你的网页更有气质，可以学习 Markdown的一些编写规范：<ahref="https://github.com/sparanoid/chinese-copywriting-guidelines">Markdown编写规范</a></p><h2 id="参考文章">参考文章</h2><p><a href="https://markdown.com.cn/">Markdown 语法教程</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Hexo博客上进行创作</title>
      <link href="/2021/08/17/%E5%9C%A8hexo%E5%8D%9A%E5%AE%A2%E4%B8%8A%E8%BF%9B%E8%A1%8C%E5%88%9B%E4%BD%9C/"/>
      <url>/2021/08/17/%E5%9C%A8hexo%E5%8D%9A%E5%AE%A2%E4%B8%8A%E8%BF%9B%E8%A1%8C%E5%88%9B%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>本文主要介绍如何在Hexo博客上进行创作，包括新建、编辑和预览文章</p><span id="more"></span><h2 id="安装markdown编辑器">安装Markdown编辑器</h2><p>要进行创作，首先必须要有相应的文本编辑器。只要安装了相应的渲染插件，Hexo 支持以任何格式书写文章。 例如，Hexo默认安装了 hexo-renderer-marked 和 hexo-renderer-ejs，因此你可以用Markdown 写作，也可以用 EJS 写作。如果安装了 hexo-renderer-pug，甚至可以用 Pug 模板语言书写文章。只需要将文章的扩展名从 md 改成ejs，Hexo 就会使用 hexo-renderer-ejs 渲染这个文件，其他格式同理。我使用的是 Markdown 编辑器来编辑文章，可以参考<ahref="https://blog.csdn.net/davidhzq/article/details/100815332">几款主流好用的markdown编辑器介绍</a>一文，选择喜欢的markdown 编辑器。 我选的是MarkdownPad2，附上下载地址：<ahref="http://www.markdownpad.com/">The Markdown Editor forWindows</a>，按默认进行安装即可。<br />如果是win10系统还需要安装一个组件 awesomium_v1.6.6_sdk_win：百度网盘链接：https://pan.baidu.com/s/1UJRtOBF8vj19ikOq4452sQ，提取码：yd8k 下载后也是默认安装即可 若要使用Markdown（Extra）则需要付费（破解），现将目前亲测有效的 Key 粘贴如下：Email address： <code>Soar360@live.com</code> License Key：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==</span><br></pre></td></tr></table></figure> 点击 Markdown 左下角图标选择Markdown（Extra），将上面的邮箱和授权秘钥填入： <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-18%2011-03-56-50.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/5494434-5949697f2f2ba48c.jpg" />然后就破解成功啦。</p><h2 id="新建文章">新建文章</h2><p>可以在根目录Blog打开Git Bash，使用命令行新建文章：<code>hexo new [layout] &lt;title&gt;</code>或<code>hexo n [layout] title</code>layout 是文章的布局，默认为post。 title是文章的标题，也是md文件的名字。</p><h3 id="布局">布局</h3><p>Hexo有三种布局，分别是 post, page 和draft。三种布局对应的路径如下：</p><table><thead><tr class="header"><th>Layout</th><th>Path</th></tr></thead><tbody><tr class="odd"><td>post</td><td>source/_posts</td></tr><tr class="even"><td>page</td><td>source</td></tr><tr class="odd"><td>draft</td><td>source/_drafts</td></tr></tbody></table><p>在博客目录下输入以下命令时，会默认使用post布局，然后自动在source_posts目录生成一个text.md文件：<code>$ hexo n text</code>也可以使用如下命令创建了一个指定布局的名为demo的文章：<code>$ hexo n [layout] demo</code></p><h3 id="文件名称">文件名称</h3><p>Hexo 默认以标题做为文件名称，但可以在根目录 Blog下的_config.yml（称为<strong>站点配置文件</strong>）编辑 new_post_name参数来改变默认的文件名称。例如可以设为 :year-:month-:day-:title.md以方便通过日期来管理文章。 有关变量和定义如下：</p><table><thead><tr class="header"><th>变量</th><th>描述</th></tr></thead><tbody><tr class="odd"><td>:title</td><td>标题（小写，空格将会被替换为短杠）</td></tr><tr class="even"><td>:year</td><td>建立的年份，比如， 2015</td></tr><tr class="odd"><td>:month</td><td>建立的月份（有前导零），比如， 04</td></tr><tr class="even"><td>:i_month</td><td>建立的月份（无前导零），比如， 4</td></tr><tr class="odd"><td>:day</td><td>建立的日期（有前导零），比如， 07</td></tr><tr class="even"><td>:i_day</td><td>建立的日期（无前导零），比如， 7</td></tr></tbody></table><h3 id="草稿">草稿</h3><p>刚刚提到了 Hexo 的一种特殊布局：draft，这种布局在建立时会被保存到source/_drafts 文件夹，可通过如下的 publish 命令将草稿移动到source/_posts 文件夹，该命令的使用方式与 new 十分类似，也可在命令中指定layout 来指定布局。 <code>$ hexo publish [layout] &lt;title&gt;</code>草稿默认不会显示在页面中，可以使用<code>hexo --draft</code>命令可以查看已有草稿，或是在<strong>站点配置文件</strong>中把render_drafts 参数设为 true 来预览草稿。</p><h3 id="front-matter">Front-matter</h3><p>打开 md 文件，可以看到文件最上方以 --- 分隔的区域，这块区域叫做Front-matter ，用于指定个别文件的变量，举例来说： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2013/7/13 20:46:25</span><br><span class="line">tags: Hello</span><br><span class="line">---</span><br></pre></td></tr></table></figure>以下是一些预先定义的参数:</p><table><thead><tr class="header"><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr class="odd"><td>layout</td><td>布局</td><td>config.default_layout</td></tr><tr class="even"><td>title</td><td>标题</td><td>文章文件名</td></tr><tr class="odd"><td>date</td><td>建立日期</td><td>文件建立日期</td></tr><tr class="even"><td>updated</td><td>更新日期</td><td>文件更新日期</td></tr><tr class="odd"><td>comments</td><td>开启文章评论</td><td>true</td></tr><tr class="even"><td>tags</td><td>标签</td><td></td></tr><tr class="odd"><td>categories</td><td>分类</td><td></td></tr><tr class="even"><td>permalink</td><td>覆盖文章网址</td><td></td></tr></tbody></table><h3 id="模版scaffold">模版（Scaffold）</h3><p>在新建文章时，Hexo 会根据 scaffolds文件夹内相对应的文件来建立文件，例如：<code>$ hexo new photo "My Gallery"</code> 在执行这行指令时，Hexo会尝试在 scaffolds 文件夹中寻找photo.md，并以其内容作为模板建立文章，因而你可以在 scaffolds文件夹中建立md文件形成自己的模板，应注意模板文件里面应只有Front-matter。 上文中Front-matter的参数都是模版中可以使用的变量。</p><h3 id="分类和标签">分类和标签</h3><p>只有文章支持分类和标签，可以在 Front-matter 中进行设置。例如：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- Diary</span><br><span class="line">tags:</span><br><span class="line">- PS5</span><br><span class="line">- Games</span><br></pre></td></tr></table></figure> 在其他系统中，分类和标签听起来很接近，但是在 Hexo中两者有着明显的差别：分类具有顺序性和层次性，也就是说 Foo, Bar 不等于Bar, Foo；而标签则没有顺序和层次。 例如： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- Diary</span><br><span class="line">- Life</span><br><span class="line">tags:</span><br><span class="line">- PS5</span><br><span class="line">- Games</span><br></pre></td></tr></table></figure> 会使分类 Life成为 Diary 的子分类，而不是并列分类，但是标签 PS5 和 Games则是并列关系，因此有必要为文章选择尽可能准确的分类。如果需要为文章添加多个分类，可以尝试以下方法： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- [Diary, PlayStation]</span><br><span class="line">- [Diary, Games]</span><br><span class="line">- [Life]</span><br></pre></td></tr></table></figure>此时这篇文章同时包括三个分类： PlayStation 和 Games 分别都是父分类 Diary的子分类，Life 是一个没有子分类的分类。</p><h2 id="编辑文章">编辑文章</h2><p>用 Markdown 编辑器打开相应文件就能进行文章的编辑了。 有关 Markdown语法可以参考<ahref="http://zcw-blog.top/2021/08/19/Markdown%E8%AF%AD%E6%B3%95%E8%AF%A6%E8%A7%A3/">Markdown语法详解</a></p><h2 id="参考文章">参考文章</h2><p><a href="https://hexo.io/zh-cn/docs/writing">Hexo写作</a></p>]]></content>
      
      
      <categories>
          
          <category> 维护日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 搭建博客 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建个人博客</title>
      <link href="/2021/08/13/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2021/08/13/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>本文旨在记录本博客搭建的过程，同时也希望能够对别人有所帮助。</p><span id="more"></span><p>本来暑假留校准备比赛，谁知突发疫情，有家不能回，学校封校，比赛延期，节奏从紧张转为舒缓，不由得有些无聊，便生出搭建个人博客的想法。由于更新较为频繁，即便按照教程一步步来也难免出现问题，在搭建过程中我也因此走了不少弯路。在遇到问题时多上网找答案，多看不同的解答，多尝试，最后基本都会解决的。</p><h2 id="关于搭建个人博客">关于搭建个人博客</h2><p>一开始搭建个人博客其实想法比较简单，主要是因为想搭所以搭了。但是在搭建过程中渐渐地对于这件事也有了不同的体会。</p><p>搭建个人博客意义何在？</p><p><strong>经验知识总结</strong></p><p>将遇到的问题、解决方法、技术经验、相关知识进行总结，便于日后查阅。</p><p><strong>碎片化学习</strong></p><p>通过网络确实能够学习到很多东西，但从网上学到的东西大都是零零散散的，不够系统，这时便能通过博客把学习的知识一点一点按自己的结构整理记录下来，从而实现碎片化学习。</p><p><strong>分享交流</strong></p><p>通过博客分享，产生沟通与交流，从而互相学习，共同进步。</p><p><strong>记录生活</strong></p><p>博客除了总结技术，还可以记录生活的诗和远方。</p><p><strong>成就感</strong></p><p>在博客的搭建过程中，总是伴随着成就感，而这成就感则会内化成为继续前进的动力。</p><p>最后以看到的一句话作结：“对任何渴望进步的人来说，写博客/文章/回答对自己的成长帮助都是巨大的。频率和数量不必过分强求，有话要说就写写，没事就歇歇，随意点。因为坚持写作的那一刻起，你就已经开始受益。”</p><p>接下来就来看看怎么搭建个人博客吧：</p><h2 id="注册-github">注册 GitHub</h2><p>打开 GitHub ：<a href="http://github.com">GitHub</a> 点击右上角 signup 进行注册（由于我注册时没有记录，为了展示注册过程我就随便填了） <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/GitHub1.0.png" />填写邮箱 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/GitHub2.0.png" />创建密码 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/GitHub3.png" />设置用户名 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/GitHub4.png" />这里会问你是否接收产品更新和公告，填“n”（no）就行 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/GitHub5.png" />接着会有一个简单的真人验证 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/RV8GPX606MUDVLY2SU8UZJ.png" />验证过后点击 creat accountGitHub会向你的邮箱发送一个验证码，将验证码填入即可 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/GitHub6.png" />自此便完成了GitHub的注册</p><h3 id="新建github仓库">新建GitHub仓库</h3><p>进入个人主页，点击 Repositories ,再点击 New 新建仓库 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2010-42-06-04.png" />按下图设置后点击 Creat repositoty <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2010-49-26-03.png" />现在你便拥有了一个名为 hello 的仓库 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2010-54-28-30.png" /></p><h2 id="安装git">安装Git</h2><p>进入<a href="https://git-scm.com/">Git官网</a>，点击 download 下载<imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-16%2014-36-34-91.png" />选择对应的系统，我的是 windows <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-16%2016-28-46-56.png" />选择适合自己系统的版本，我的是64位系统，所以选了 64-bit <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-16%2016-30-35-38.png" />下载完成后打开 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-16%2016-37-52-79.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-16%2016-39-50-31.png" /><em>注：第二个新选项是说很多团队已经将他们的默认分支名改为 main .这是因为2020 年非裔男子乔治·弗洛伊德因白人警察暴力执法惨死而掀起的 BlackLives Matter (黑人的命也是命)运动，很多人认为 master不尊重黑人，呼吁改为 main.</em> <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-16%2016-45-45-23.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-16%2016-48-00-63.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-16%2016-51-04-17.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-16%2016-53-56-76.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-16%2016-56-54-22.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-16%2017-07-42-30.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-16%2017-10-04-10.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-16%2017-13-45-75.png" />点击 install 安装 安装完成后进行检验：桌面右键出现如下选项即表示成功<imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-16%2017-28-04-84.png" />如果想看更加详细的安装教程或了解各选项含义，可以参考<ahref="https://blog.csdn.net/mukes/article/details/115693833">Git详细安装教程（详解 Git 安装过程的每一个步骤）</a></p><h2 id="绑定git并提交文件push">绑定Git并提交文件（push）</h2><p>我们利用 SSH 来完成 GitHub 与 Git 的绑定，实现方便快捷地提交文件。SSH 其实是一种网络安全协议，简单介绍如下： SSH（安全外壳协议，SecureShell 的缩写）是建立在应用层基础上的安全协议。 SSH是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议，利用 SSH协议可以有效防止远程管理过程中的信息泄露问题。简单来说， SSH就是保障你的账户安全，将你的信息全部加密，防止其他人截获你的数据，还能加快传输速度。若想详细了解，可以参考<ahref="https://blog.csdn.net/qq_35246620/article/details/54317740">详述SSH 的原理及其应用</a> 接下来便介绍如何绑定GitHub和提交文件。</p><h3 id="绑定github">绑定GitHub</h3><p>要用 git 上传文件到 GitHub 首先得利用 SSH登录远程主机，而登录方式有两种：一种是口令登录；另一种是公钥登录。口令登录每次都要输入密码十分麻烦，而公钥登录省去了输入密码的步骤，因而我们选择公钥授权。首先我们得在GitHub 上添加 SSH key 配置。 首先我们在新建的文件夹中右键打开 GitBash，输入 ssh 命令，查看本机是否安装 SSH（一般安装 Git的时候默认安装了）： <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2000-04-34-28.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2000-12-05-42.png" />如图便是已安装 SSH 输入<code>ssh-keygen -t rsa</code>命令，表示我们指定RSA 算法生成密钥，然后敲四次回车，之后就会生成两个文件，分别为秘钥id_rsa 和公钥 id_rsa.pub 。文件的位置在 Git Bash上面都有显示，默认生成在以下目录：</p><blockquote><p>Linux 系统：~/.ssh</p><p>Mac 系统：~/.ssh</p><p>Windows 10 ：C:/Users/ASUS/.ssh</p></blockquote><p>接下来要把公钥 id_rsa.pub 的内容添加到 GitHub。可以通过目录找到id_rsa.pub文件的位置，用记事本打开文件复制。如果找不到文件可以直接在输入以下命令Git Bash 上打开： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.ssh </span><br><span class="line">$ ls</span><br><span class="line">$ cat id_rsa.pub</span><br></pre></td></tr></table></figure> <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2000-31-03-39.png" />连带着ssh-rsa的一大串内容就是公钥，<strong>注意：git 中的复制粘贴不是Ctrl + C 和 Ctrl + V，而是 Ctrl + insert 和 Shift +insert.</strong>复制完公钥后，进入我们的 GitHub主页，先点击右上角，再点击 settings <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2000-39-15-60.png" />之后点击 SSH and GPG keys，再点击 New SSH key. <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2010-10-22-37.png" />将复制的公钥 id_rsa.pub 的内容粘贴到 key 内，标题填不填无所谓，再点击Add SSH key <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2010-17-23-29.png" />可以在 Git Bash 中输入<code>ssh -T git@github.com</code>验证是否成功，第一次会出现下图这种情况，填 yes 就行 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/v2-5b4f05ea2e2a7fb8b13fd35a9bafa8.png" />绑定成功 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2010-22-51-09.png" /></p><h3 id="提交文件">提交文件</h3><p>提交文件有两种方法： 第一种：本地没有 git 仓库 - 直接将远程仓库 clone到本地； - 将文件添加并 commit 到本地仓库； - 将本地仓库的内容 push到远程仓库。</p><p>第二种：本地有 Git 仓库，并且我们已经进行了多次 commit 操作 -建立一个本地仓库进入，init 初始化； - 关联远程仓库； -同步远程仓库和本地仓库； - 将文件添加提交到本地仓库； - 将本地仓库的内容push 到远程仓库。</p><h4 id="本地没有-git-仓库">本地没有 git 仓库</h4><p>首先，进入 GitHub 个人主页，点击进入新建的 text 仓库 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2010-38-52-52.png" />点击 Code，复制仓库地址 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2010-57-35-21.png" />然后进入我们准备存储 Git 仓库的目录右键 Git Bash <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2011-02-29-53.png" />接下来，输入<code>git clone 仓库地址</code>，将远程仓库 clone 到本地<imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2011-11-07-06.png" />如图没有 clone 成功，而是报错 OpenSSL SSL_read: Connection was reset,errno 10054（以后可能还会多次遇到），原因是由于国内墙的存在，GitHub网络不稳定，导致 clone失败，解决方法很简单，多试几次总会成功的，或者通过 GitHub国内代理加速，详见<a href="https://ghproxy.com/">GitHubProxy代理加速</a>。如果还是不行则输入<code>git config --global http.sslVerify "false"</code>解除SSL 认证，再进行 clone 。可参考<ahref="https://blog.csdn.net/qq_29493173/article/details/114534057">Git报错解决：OpenSSLSSL_read: Connection was reset, errno 10054</a>。 再 clone一遍，还是没有成功，仍然是网络网络问题，连接超时，多试几次就好了 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2011-12-11-84.png" />如下图就是 clone 成功： <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2011-15-46-34.png" />看看 clone 到本地的仓库内容与远程仓库的内容，是否完全一致 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2011-33-01-59.png" />接下来创建一个 text.txt 测试文件 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2011-35-32-10.png" />从此目录进入 Git Bash，输入<code>git status</code>命令查看仓库状态 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2011-37-50-72.png" />text 已经是一个 Git 仓库了，由图可见刚刚创建的文件 text.txt没有被追踪，也就是没有提交到本地仓库。现在我们使用<code>git add</code>命令将文件添加到了「临时缓冲区」，再用<code>git commit -m "提交信息"</code>将其提交到本地仓库<imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2011-44-25-92.png" />如果你是第一次提交的话，会让你输入用户名和邮箱 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/v2-53a22acbdcbd4e1c0f8ba8df5b33f8ce_720w.jpg" />这时只要再执行如下两行命令即可： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure>完成后输入<code>git log</code>命令查看仓库提交日志 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2011-51-40-38.png" />再输入<code>git status</code>查看一下仓库状态 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2011-53-36-78.png" />现在输入<code>git push origin main</code>命令，将本地仓库提交到远程仓库，origin是远程主机的名字<imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/v2-a6dd07e3a40ea265f2b821db2f33266c_r.jpg" />第一次上传需要输入密码，验证成功后，如下图： <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2011-57-05-56.png" />刷新 GitHub 的 text 仓库，可见测试文件已经上传到了 text 仓库中 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2011-59-29-69.png" /></p><h4 id="本地有-git-仓库">本地有 Git 仓库</h4><p>首先，建立一个本地仓库text2，使用<code>git init</code>命令初始化仓库<imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2012-02-57-79.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2012-04-23-17.png" />输入<code>git remote add origin 仓库地址</code>命令，关联远程仓库，接着输入<code>git pull origin main</code>命令，同步远程仓库和本地仓库<imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2012-08-25-01.png" />回到本地仓库，可以发现远程仓库的内容已经同步到了本地仓库 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2012-12-32-79.png" />接下来的步骤与第一种方法一样，可以自行尝试，先输入<code>git add</code>和<code>git commit</code>命令，将要提交的文件添加并提交到text2仓库；然后再输入<code>git push origin main</code>命令，将本地仓库修改（或者添加）的内容提交到远程仓库。</p><h2 id="安装nodejs和hexo">安装nodejs和Hexo</h2><h3 id="安装nodejs">安装nodejs</h3><p>打开<a href="https://nodejs.org/en/">node.js官网</a> <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2013-36-15-20.png" />点击下载，<em>注：由于 nodejs14可能在之后出现一些警告（warning），虽然无伤大雅，但是介意的可以找找旧的版本比如nodejs12 。</em>下载完成后双击安装，安装直接默认 next，需要改的只有安装路径，我的路径是D:/node js。详细安装步骤可参考<ahref="https://blog.csdn.net/antma/article/details/86104068">node.js安装详细步骤教程</a> 安装完成后可以打开 cmd（Win + R 后输入cmd）检验是否安装成功，用<code>node -v</code>和<code>npm -v</code>命令检查版本<imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-1713-48-03.png" /></p><h4id="设置npm在安装全局模块时的路径和环境变量">设置npm在安装全局模块时的路径和环境变量</h4><p>如果不设置的话，安装模块的时候就会把模块装到 C 盘，占用 C盘的空间，并且有可能安装好 Hexo 后却无法使用。 步骤如下： 在 node js文件夹中新建两个空文件夹 node_cache 、 node_global： <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2013-51-58-37.png" />打开 cmd ，输入如下两个命令： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">&quot;D:\nodejs\node_global&quot;</span></span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">&quot;D:\nodejs\node_cache&quot;</span></span><br></pre></td></tr></table></figure> <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/v2-46234877dbb7978d7935e3512a5fd8dc_720w.jpg" />设置环境变量：win10 系统 --&gt; 打开控制面板 --&gt; 系统--&gt;高级系统设置 --&gt; 环境变量，然后在系统变量中新建一个变量名为<code>NODE_PATH</code>，值为<code>D:\node js\node_global\node_modules</code> <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2013-57-24-67.png" />然后编辑用户变量里的 Path ，将相应 npm 的路径改为：D:js_global <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2013-57-24.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2014-00-12-61.png" />完成后点击确定即可 #### 测试模块安装 在 cmd下执行<code>npm install webpack -g</code> <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2014-17-27-75.png" />可见 webpack 这个模块已经在设置默认的文件夹中了 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2014-18-06-86.png" />### 安装HexoHexo就是我们的个人博客网站的框架，安装之前要先在GitHub上创建一个仓库，<strong>仓库名称（Repositoryname）为“用户名.github.io”</strong>，创建好后点击 settings <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2014-20-39-88.png" />下拉到 GitHub Pages，点击 check it out here <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2014-22-08-23.png" />出现如下内容就说明成功了 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2014-30-22-05.png" />接下来安装 Hexo，首先在 D 盘创建文件夹 Blog ，点开 Blog ，鼠标右键打开Git Bush Here，输入npm命令<code>npm install -g hexo-cli</code>安装Hexo<imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2014-29-29-07.png" />安装完成后，输入<code>hexo init</code>命令初始化博客 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2014-33-38-97.png" />然后输入<code>hexo g</code>静态部署，nodejs14版本会出现如下警告（warning），可以不用理会 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2014-35-28-83.png" />这时网页已经部署完成，输入<code>hexo s</code>命令可以查看 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2014-38-09-34.png" />浏览器输入 http://localhost:4000 就可以打开新部署的网页 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/v2-5a8d3a94b1eb5e4e79f2e733ddaed2aa_r.jpg" />看完之后 ctrl +c 停止运行服务器。 ### 将Hexo部署到GitHub 回到 Blog文件夹，用记事本打开 _config.yml 文件 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2014-42-24-44.png" />在底部填写以下内容： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/reman2021/reman2021.github.io.git  <span class="comment">#你的仓库地址</span></span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><strong>特别要注意冒号后面要有空格</strong> <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/v2-7f9e09b1827fd9202088cc9d9b19880e_720w.png" />仓库地址之前也讲过，其实就在这里 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2014-48-34-96.png" />回到 Blog 文件夹，打开 GitBash，输入命令<code>npm install hexo-deployer-git --save</code>安装 Git部署插件 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/v2-a5172536904c8eaa602debc6e54c877b_r.jpg" />然后分别输入以下三条命令： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean   <span class="comment">#清除缓存文件 db.json 和已生成的静态文件 public</span></span><br><span class="line">hexo g       <span class="comment">#生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)</span></span><br><span class="line">hexo d       <span class="comment">#自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</span></span><br></pre></td></tr></table></figure> <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2014-53-56-23.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2014-54-22-19.png" />完成以后，打开浏览器，输入 https://用户名.github.io就可以打开你的网页了。现在虽然可以访问我们的网站，但是网址是GitHub提供的：http://xxxx.github.io而如果想使用自己的个性化域名，则需绑定自己的域名，这就需要进行域名购买和解析。</p><h2 id="购买域名与解析域名非必须">购买域名与解析域名（非必须）</h2><h3 id="购买域名">购买域名</h3><p>接下来的操作不需要购买域名也能进行，我在一开始本着勤俭节约的优良风尚（穷），并没有购买域名，是在之后无意间看到腾讯DNSPod有5元无门槛优惠券，最后没有把持住花重金（2元）购买了域名，终究还是腾讯高。购买域名有几个网站，主要有<ahref="https://sg.godaddy.com/zh/offers/domains/godaddycom?isc=gennbacn07&amp;countryview=1&amp;currencyType=CNY&amp;utm_source=baidu&amp;utm_medium=cpc&amp;utm_term=Title&amp;utm_campaign=zh-cn_corp_sem_x_b_x_bz_001&amp;utm_content=Brandzone%20PC&amp;gclid=CIXh9LjPmecCFdOavAoddDkHcw&amp;gclsrc=ds">Godaddy</a>，<ahref="https://cloud.tencent.com/">腾讯云</a>，<ahref="https://wanwang.aliyun.com/">万网</a>。由于我是在腾讯云购买的域名，便详细讲一下腾讯云购买域名步骤。 首先打开<ahref="https://cloud.tencent.com/act/pro/DNSPodDomainsCarnival">DNSPod域名狂欢季页面</a>，可以看到2张5元无门槛优惠券，DNSPOD全产品代金券和域名注册代金券，都是可以用来注册域名的。由于我已经领了，所以没有显示域名注册代金券。<imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2013-12-03-32.png" />然后找到域名注册 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2013-13-51-49.png" />查询想要注册的域名 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2013-16-03-01.png" />点击加入购物车后，点击立即购买后进入订单详情页 点击添加免费 SSL 证书<imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2013-18-45-74.png" />注意根据需要取消勾选自动续费 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2013-19-22-98.png" />提交订单付费（优惠券自动抵扣5元）之后还要创建实名模板，需要上传身份证信息，按流程走就行审核也挺快的，可以在域名注册-我的域名查看</p><h3 id="解析域名">解析域名</h3><p>在域名注册找到解析并添加如下两条解析记录： <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2013-27-19-56.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2015-50-49-40.png" />IPV4 地址可以通过 ping 得到，打开 cmd 输入：<code>ping reman2021.github.io    #ping + 你的GitHub的网址</code> <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2015-57-10-92.png" />接着打开 Blog/source，添加 CNAME 文件，可以先用记事本创建一个 txt文件，打开后写上你的域名，(注：不要加 www. 否则每次访问都必须加 www.，但如果不带有 www. ，以后访问的时候带不带 www.都可以访问)，另存后记得要重命名为CNAME，并且将 .txt 删除，如下图： <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2016-03-34-93.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2016-05-42-20.png" />回到 Blog 文件夹，右键打开 Git Bash，依次走完 hexo 三部曲：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure> 打开 GitHub，看看 CNAME 文件是否已经在仓库中，点击settings <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2016-09-57-59.png" />在 GitHub Pages 查看你的域名是否保存 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2016-12-36-78.png" />如果域名是空白的话看看能不能自行添加 如果仓库中没有 CNAME文件，也可以自己添加，方法如下： <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2016-16-24-60.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2016-17-49-37.png" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2016-18-47-55.png" />## 创作文章现在博客已经搭建好了，虽然比较简陋，但是已经可以进行文章创作啦。文章创作指南：<ahref="http://zcw-blog.top/2021/08/17/%E5%9C%A8hexo%E5%8D%9A%E5%AE%A2%E4%B8%8A%E8%BF%9B%E8%A1%8C%E5%88%9B%E4%BD%9C/">在Hexo博客上进行创作</a>## 设置NexT主题 目前 Hexo 博客有许多主题可供选择，常见的有NexT、Yilia、Hacker等等，可以根据喜好自行选择，上网查找的话相关资料也非常多。这里提供两篇参考文章：<a href="https://www.bilibili.com/read/cv4499195/">Hexo主题推荐</a> <ahref="https://blog.csdn.net/zgd826237710/article/details/99671027">Hexo好看的主题推荐</a> 我用的是 NexT主题，也是目前使用人数最多的主题（大概），主要当时只知道这一个，现在虽然眼馋其他主题但是懒得换，不过yysy，NexT主题确实挺好看。 NexT主题下载地址：<ahref="https://github.com/theme-next/hexo-theme-next">theme-next/hexo-theme-next</a>打开 Blog 文件夹，右键 GitBash，输入<code>git clone https://github.com/theme-next/hexo-theme-next themes/next</code>将next 主题下载到目录 Blog/themes <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/v2-4d4e54afc1550a4e6af02fe489c696ce_r.jpg" /><imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2015-24-53-73.png" />打开 Blog 下的 _config.yml(称为<strong>站点配置文件</strong>)，找到并修改以下内容<strong>（注意冒号后都要有空格）</strong>：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: ZCW_Blog<span class="comment">#标题</span></span><br><span class="line">subtitle: <span class="string">&#x27; &#x27;</span></span><br><span class="line">description: <span class="string">&#x27; &#x27;</span><span class="comment">#简介或者格言</span></span><br><span class="line">keywords:</span><br><span class="line">author: reman<span class="comment">#作者</span></span><br><span class="line">language: zh-HK<span class="comment">#主题语言</span></span><br><span class="line">timezone: Asia/Shanghai<span class="comment">#中国的时区</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: next   <span class="comment">#主题改为next</span></span><br></pre></td></tr></table></figure> 主题语言可以在 themes/next/language 中查看，我选的是zh-HK（繁体中文），不过我在博客中加入了一键切换繁/简体的功能 <imgsrc="https://cdn.jsdelivr.net/gh/reman2021/ImageHosting@main/zcw-blog-picture/2021-08-17%2015-30-43-48.png" />next主题有四种： Muse 、 Mist 、 Pisces 、 Gemini ，预览可参考<ahref="https://www.jianshu.com/p/e7e67b900db4">2019-03-06NexT四种主题</a>，跟现在的差别不是很大 我选的是Gemini（默认主题是Muse），打开 Blog/themes/next/ 下的_config.yml（称为<strong>主题配置文件</strong>），将你选的主题前的注释（#）删除就行了，注意只能选一个，不选的主题要注释掉，不然会报错<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure> 回到根目录 Blog 打开 Git Bash，分别输入如下三条命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure> 完成后打开你的博客查看即可。 注：由于网络问题 hexo d的时候可能会报错，hexo 三部曲多试几次就行了 ## NexT主题优化</p>]]></content>
      
      
      <categories>
          
          <category> 维护日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/08/11/hello-world/"/>
      <url>/2021/08/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your veryfirst post. Check <a href="https://hexo.io/docs/">documentation</a> formore info. If you get any problems when using Hexo, you can find theanswer in <ahref="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> oryou can ask me on <ahref="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><p><span id="more"></span></p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
